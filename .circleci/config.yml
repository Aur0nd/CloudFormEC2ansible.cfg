version: 2.1

commands:
  destroy_environment:
    steps:
      - run:
          name: Destroy environment
          command: |
            aws cloudformation delete-stack --stack-name prod-${CIRCLE_WORKFLOW_ID}
          when: on_fail


jobs:   #Test SSH-fingerprints
  create-infrastructure:
    docker:
     - image: amazon/aws-cli
       auth:
        username: $ubuntuID
        password: $ubuntukey
    steps:
      - checkout
      - run:
          name: Create backend
          command: | 
                  aws cloudformation create-stack --stack-name prod-{CIRCLE_WORKFLOW_ID} --template-body file://CF/template.yml
      - run: return 1
      - destroy_environment


  configure_infrastructure:
    docker:
     - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["be:21:ae:6a:5e:7b:6f:ef:9b:cb:31:21:d4:69:93:bc"]
      - run:  
          name: Install dependencies
          command: | #Install the dependencies
            apk add --update ansible  
      - run:
          name: Execute playbook
          command: |
            ansible-playbook main.yml -i inventory.txt
  smoketest:
    docker:
     - image: circleci/node:13.8.0 
    steps:
      - run: apk add --update curl
      - run:
          name: smoke test.
          command: |
            URL="34.220.2.77:3000"
            if curl -s --head ${URL} # test if website exists
            then
              return 0
            else
              return 1
            fi
      #- run: return 1
      - destroy_environment


workflows:
  my_workflo:
    jobs:
      - configure_infrastructure
      - smoketest:
          requires:
           - configure_infrastructure

